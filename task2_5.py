# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп
# (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
# получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после
# сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

def price_normalize(prices):
    prices_str = ''
    for i in range(len(prices)):
        rub, kop = str(float(prices[i])).split('.')
        if len(rub) < 2:
            rub = '0' + rub
        if len(kop) < 2:
            kop = kop + '0'
        prices_str += f'{rub} руб {kop} коп'
        if i + 1 != len(prices):
            prices_str += ', '
    print(prices_str)

prices = [57.8, 46.51, 97, 39.9, 150.6, 545.8, 4.59, 88, 99.9, 150.5]
prices.sort()
print("Цены, отсортированные по возрастанию:")
price_normalize(prices)
prices_low = prices.copy()
prices_low.sort(reverse=True)
print("Цены, отсортированные по убыванию:")
price_normalize(prices_low)
print("Вывести цены пяти самых дорогих товаров:")
max_five_pos_price = []
for i in range(5):
    max_five_pos_price.append(prices_low[i])
price_normalize(max_five_pos_price)
max_five_pos_price.sort()
print("Вывести цены пяти самых дорогих товаров по возрастанию:")
price_normalize(max_five_pos_price)

# Не смогла разобраться с этим моментом  -  "доказать, что объект списка после сортировки остался тот же"
